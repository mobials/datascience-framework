---
# tasks file for airflow

- name: Make sure the /etc/airflow directory exists, along with the dags dir
  file:
    path: "{{ airflow.home }}/dags"
    state: directory
    owner: airflow
    group: airflow
    mode: 0775

- name: Install airflow
  pip: 
    executable: /usr/bin/pip3
    name: "{{ airflow.pip_package }}"

- name: Create airflow environment file
  template:
    src: .env.airflow.j2
    dest: "{{ airflow.home }}/.env"
    owner: airflow
    group: airflow
    mode: '0644'
  notify: 
    - restart_airflow_webserver
    - restart_airflow_scheduler

- name: Init the airflow db
  command: airflow initdb
  environment:
    AIRFLOW_HOME: "{{ airflow.home }}"
    AIRFLOW__CORE__SQL_ALCHEMY_CONN: "{{ airflow.db }}"
    AIRFLOW__CORE__EXECUTOR: LocalExecutor
    AIRFLOW__CORE__LOAD_EXAMPLES: False

- name: Configure airflow db connection
  lineinfile:
    path: "{{ airflow.home }}/airflow.cfg"
    regexp: '^sql_alchemy_conn = '
    line: "sql_alchemy_conn = {{ airflow.db }}"
  notify: 
    - restart_airflow_webserver
    - restart_airflow_scheduler

- name: Disable examples
  lineinfile:
    path: "{{ airflow.home }}/airflow.cfg"
    regexp: '^load_examples = '
    line: "load_examples = false"
  notify: 
    - restart_airflow_webserver
    - restart_airflow_scheduler

- name: Configure airflow executor
  lineinfile:
    path: "{{ airflow.home }}/airflow.cfg"
    regexp: '^executor = '
    line: "executor = LocalExecutor"
  notify: 
    - restart_airflow_webserver
    - restart_airflow_scheduler

- name: Create the airflow webserver service
  template:
    src: airflow-webserver.service.j2
    dest: /etc/systemd/system/airflow-webserver.service
  notify: restart_airflow_webserver

- name: Create the airflow scheduler service
  template:
    src: airflow-scheduler.service.j2
    dest: /etc/systemd/system/airflow-scheduler.service
  notify: restart_airflow_scheduler

- name: Copy Dags
  shell: "cp -r {{ airflow.dags }} {{ airflow.home }}/dags/"

- name: Make sure airflow has access to everything
  command: chown -R airflow:airflow .
  args:
    chdir: "{{ airflow.home }}"
